/*
 *	NGLParserDAE.h
 *	
 *	The NinevehGL Engine is a free 3D engine to work with OpenGL programmable pipeline, made with pure
 *	Objective-C for iOS (iPhone, iPad and iPod Touch). NinevehGL is prepared to import 3D file with the
 *	formats:
 *		- WaveFront OBJ file (.obj);
 *		- COLLADA file (.dae).
 *
 *	More information at the official web site: http://nineveh.gl
 *	
 *	Created by Diney Bomfim on 3/18/11.
 *	Copyright (c) 2011 DB-Interactively. All rights reserved.
 */

#import "NGLRuntime.h"
#import "NGLParserMesh.h"
#import "NGLQuaternion.h"

/*!
 *					<strong>(Internal only)</strong> Loads and parses files of format COLLADA (.dae).
 *
 *					Each COLLADA file loaded by NGLParserDAE represents only one single mesh,
 *					independently of the number of groups, scenes or meshes it has.
 *
 *					The COLLADA file is one of the largest and complete 3D file and the NGLParserDAE
 *					respects this complexity. As a result, not all meshes in the file will be parsed,
 *					only the meshes referenced by scenes will be. So, if the exporter software doesn't
 *					put the mesh(es) on the scenes, that mesh(es) could not be parsed by NGLParserDAE.
 *
 *					You can adjust the output data specifying if you want to:
 *
 *						- Resize the vertices position from the original mesh;
 *						- Rescale the entire mesh;
 *						- Centralize the mesh on the orgin (0,0,0).
 *
 *					NGLParserDAE was already tested with COLLADA files generated by the following
 *					3D programs:
 *
 *						- 3Ds Max
 *						- Maya
 *						- Blender
 *						- MudBox
 *						- Cheetah
 *						- SoftImage XSI
 *						- Google SketchUp
 *
 *					The supported features for the current NinevehGL version are:
 *
 *						- Libraries assets, images, materials, effects, geometries, visual_scenes, nodes;
 *						- Polygons types: lines, triangle and all other polygons;
 *						- Transformations: all (individually and matrices);
 *	
 *					NGLParserDAE works with an Error API which can inform about the problems in the COLLADA
 *					files and also indicates a possible solution to the error. However, it's important that
 *					you pay atention to some rules:
 *
 *						- Vertex data must have at least 3 values (x y z);
 *						- Texture data must have at least 2 values (u v);
 *						- Normal data must have at least 3 values (x y z);
 *						- COLLADA files don't provide any support to the bump maps;
 *						- The unique faces cannot exceed 65535;
 *						- There is no support for animations, controls, cameras or lights.
 *						- There is no support to any kind of external third files.
 *	
 *					Even being the NGLParserDAE a fast parser, you should remember some important tips to
 *					boost its performance:
 *
 *						- COLLADA files with only triangles in it will be processed faster;
 *						- COLLADA files with Y_UP as its up_axis will be processed faster;
 *						- COLLADA files with matrices rather than linear transformations will be processed
 *							faster;
 *						- COLLADA file without recursive nodes will be processed faster.
 */
@interface NGLParserDAE : NGLParserMesh <NSXMLParserDelegate>
{
@private
	// Caches
	BOOL					_sCache;
	
	// Definitions
	BOOL					_hasTexcoord;
	//BOOL					_hasNormal;
	
	NSMutableDictionary		*_daeGeometries;
	NSMutableDictionary		*_daeEffects;
	NSMutableDictionary		*_daeImages;
	NSMutableDictionary		*_daeMaterials;
	NSMutableDictionary		*_daeAllNodes;
	NSMutableArray			*_daeSceneNodes;
	NSMutableArray			*_daeParentNodes;
	
	NSMutableDictionary		*_transformations;
	NGLmat4					**_matrices;
	int						_mCount;
	
	NSMutableDictionary		*_tempSource;
	NSMutableDictionary		*_tempPolygon;
	NSMutableArray			*_tempArray;
	
	// Helpers
	NSString				*_finalPath;
	NSString				*_idTemp;
	NSString				*_sidTemp;
	NSString				*_urlTemp;
	
	NSString				*_element;
	NSDictionary			*_attributes;
	NSMutableString			*_content;
	
	int						_vOffset;
	int						_vtOffset;
	//int						_vnOffset;
	NSArray					*_polyFaces;
	
	NSString				*_parent;
	NSString				*_crossParam;
	
	// Material structure
	NGLSurface				*_currentSurface;
	
	// Groups
	NGLivec3				*_groups;
	int						_gCount;
	unsigned int			_currentGrp;
}

@end
